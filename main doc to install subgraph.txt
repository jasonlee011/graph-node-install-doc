104.234.118.252
root
j3NeY69wznS7JW


-----------------------
sudo apt-get update
sudo apt-get upgrade


-----------------------------------------------
https://github.com/graphprotocol/graph-node/
-----------------------------------------------


---------------------------------------------------------------------------
-------------------Rust Install------------------
https://www.digitalocean.com/community/tutorials/install-rust-on-ubuntu-linux

curl --proto '=https' --tlsv1.3 https://sh.rustup.rs -sSf | sh
source $HOME/.cargo/env
rustc --version
sudo apt update
sudo apt upgrade
sudo apt install build-essential



------------------Postgresql Install--------------
https://www.postgresql.org/download/linux/ubuntu/

sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
sudo apt-get update
sudo apt-get -y install postgresql



------------------IPFS Install-------------------
https://docs.ipfs.tech/install/command-line/#install-kubo-linux

wget https://dist.ipfs.tech/kubo/v0.19.0/kubo_v0.19.0_linux-amd64.tar.gz
tar -xvzf kubo_v0.19.0_linux-amd64.tar.gz
cd kubo
sudo bash install.sh



------------------Protoc Install------------------
https://grpc.io/docs/protoc-installation/

curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v3.17.3/protoc-3.17.3-linux-x86_64.zip
unzip protoc-3.17.3-linux-x86_64.zip -d $HOME/.local
export PATH="$PATH:$HOME/.local/bin"


------------------NVM Install---------------------
https://tecadmin.net/how-to-install-nvm-on-ubuntu-20-04/

sudo apt install curl
curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash 
source ~/.bashrc
nvm ls
nvm install 18
nvm current
node -v


-----------------Yarn Install----------------------
npm install --global yarn
yarn --version




-------------------------------------------------------------------------------
------------------IPFS Env-----------------------(first terminal)
ipfs init
ipfs daemon
-------------------


------------------Postgres Env-------------------(second terminal)
sudo service postgresql status
sudo su - postgres
createuser --superuser --login --createdb --createrole root --password
123
psql
\du

createdb -O root -E UTF8 -T template0 -l C graph-node
psql
\l
ctrl+z


------------------Rainbow Env--------------------(third terminal)


-----------------Additional Env------------------(fourth termainl)
sudo apt-get install -y clang libpq-dev libssl-dev pkg-config
--init db
psql -q -X -U root graph-node 
create extension pg_trgm;
create extension pg_stat_statements;
create extension btree_gist;
create extension postgres_fdw;
grant usage on foreign data wrapper postgres_fdw to root;
ctrl+z
psql -U root -d graph-node
SELECT usename, usecreatedb, usesuper FROM pg_user WHERE usename = 'root';
ALTER USER root WITH PASSWORD '123';


-----------------Main Graph Node Start-----------(fifth termianl)
git clone https://github.com/graphprotocol/graph-node
cd graph-node
export PATH="$PATH:$HOME/.local/bin"
protoc --version
cargo build

export GRAPH_ALLOW_NON_DETERMINISTIC_IPFS=true && cargo run -p graph-node --release -- \
--postgres-url postgresql://root:123@localhost:5432/graph-node \
--ethereum-rpc mainnet:http://18.142.163.32/ \
--ipfs 127.0.0.1:5001


-----------------Main Subgraph Project-----------(sixth terminal)
cd ans
yarn
yarn setup






---------------Rainbow install-------------------(seventh terminal)
https://github.com/graphprotocol/ens-rainbow

git clone https://github.com/graphprotocol/ens-rainbow.git
cd ens-rainbow

-----------------gsutils install------------------
https://cloud.google.com/storage/docs/gsutil_install

sudo apt-get install apt-transport-https ca-certificates gnupg

echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list

curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring 
/usr/share/keyrings/cloud.google.gpg add -

sudo apt-get update && sudo apt-get install google-cloud-cli
RUN echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg  add - && apt-get update -y && apt-get install google-cloud-cli -y

----------------download storage-------------------
gsutil cp gs://ens-files/preimages/* .
cat preimages-* | cargo run --release | gzip > data.sql
pg_dump -c -O --no-tablespaces -t ens_names -f /var/tmp/ens_names.sql.gz -Z9
gsutil cp gs://ens-files/ens_names.sql.gz ./ens_names.sql.gz

----------------create jupyterhub role for sql------
createuser --superuser --login --createdb --createrole jupyterhub --password
123
psql -d graph-node
SELECT usename, usecreatedb, usesuper FROM pg_user WHERE usename = 'jupyterhub';
ALTER USER jupyterhub WITH PASSWORD '123';
exit
exit
----------------run sql----------------------------
zcat ens_names.sql.gz | psql -U root -d graph-node



-----------------------------------------------------------------------------------------------------
-------------------Test query--------------------------
{
  accounts(first: 10) {
    domains {
      name
    }
  }
}


----------------Postgres Maintainaence-----------
sudo su - postgres
psql
SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname='graph-node';
drop database "graph-node";
ctrl+z
createdb -O root -E UTF8 -T template0 -l C graph-node

psql -q -X -U root graph-node 
create extension pg_trgm;
create extension pg_stat_statements;
create extension btree_gist;
create extension postgres_fdw;
grant usage on foreign data wrapper postgres_fdw to root;
ctrl+z
psql -U root -d graph-node
SELECT usename, usecreatedb, usesuper FROM pg_user WHERE usename = 'root';















